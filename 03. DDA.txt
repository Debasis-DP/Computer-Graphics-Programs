#include <Windows.h>
#include <GL\glew.h>
#include <GL\freeglut.h>
#include <iostream>
#include <math.h>

#define ROUND(x) ((int)(x+0.5))
int xa, xb, ya, yb;
float m;
int x, y, c;
void display(void)
{
	int dx = xb - xa, dy = yb - ya, steps, k, i, j;
	float new_e;
	float xIncrement, yIncrement, x = xa, y = ya;
	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(0.0, 0.0, 1.0);
	if (abs(dx)>abs(dy))
		steps = abs(dx);
	else steps = abs(dy);
	xIncrement = dx / (float)steps;
	yIncrement = dy / (float)steps;
	glBegin(GL_POINTS);
	glVertex2s(ROUND(x), ROUND(y));
	for (k = 0; k<steps; k++)
	{
		x += xIncrement;
		y += yIncrement;
		glVertex2s(ROUND(x), ROUND(y));
		printf("%lf %lf\n", x, y);
	}
	glColor3f(1.0, 1.0, 1.0);
	float data[9];
	for (i = 0; i<100 - 3; i++)
	{
		for (j = 0; j<100 - 3; j++)
		{
			glReadPixels(i, j, 1, 1, GL_COLOR_INDEX, GL_FLOAT, &data[0]);
			glReadPixels(i, j + 1, 1, 1, GL_COLOR_INDEX, GL_FLOAT, &data[1]);
			glReadPixels(i, j + 2, 1, 1, GL_COLOR_INDEX, GL_FLOAT, &data[2]);
			glReadPixels(i + 1, j, 1, 1, GL_COLOR_INDEX, GL_FLOAT, &data[3]);
			glReadPixels(i + 1, j + 1, 1, 1, GL_COLOR_INDEX, GL_FLOAT, &data[4]);
			glReadPixels(i + 1, j + 2, 1, 1, GL_COLOR_INDEX, GL_FLOAT, &data[5]);
			glReadPixels(i + 2, j, 1, 1, GL_COLOR_INDEX, GL_FLOAT, &data[6]);
			glReadPixels(i + 2, j + 1, 1, 1, GL_COLOR_INDEX, GL_FLOAT, &data[7]);
			glReadPixels(i + 2, j + 2, 1, 1, GL_COLOR_INDEX, GL_FLOAT, &data[8]);
			new_e = 0;
			for (k = 0; k<9; k++)
				new_e += data[k];
			new_e /= 9;
			glDrawPixels(1, 1, GL_COLOR_INDEX, GL_FLOAT, &new_e);
		}
	}
	for (int i = -100; i <= 100; i++)
	{
		glVertex2s(i, 0);
		glVertex2s(0, i);
	}
	for (int i = -2; i <= 2; i++)
	{
		glVertex2s(95 + i, 4 + i);
		glVertex2s(95 - i, 4 + i);
	}
	for (int i = 0; i <= 2; i++)
	{
		glVertex2s(4 + i, 95 + i);
		glVertex2s(4 - i, 95 + i);
		glVertex2s(4, 95 - i);
	}

	glEnd();
	glFlush();
}
void init(void)
{
	glClearColor(0.0, 0.0, 0.0, 0.0);
	glOrtho(-100.0, 100.0, -100.0, 100.0, -1.0, 1.0);
}

int main(int argc, char** argv)
{
	printf("Enter the points\n");
	scanf("%d %d %d %d", &xa, &ya, &xb, &yb);

	/*printf("\nEnter the value of m : ");
	scanf("%f",&m);
	printf("\nEnter the value of c : ");
	scanf("%d",&c);
	xa = -100;
	xb = 100;
	ya = m * xa + c;
	yb = m * xb + c;
	printf("\nEnter the x-coordinate of the point : ");
	scanf("%d",&x);
	printf("\nEnter the y-coordinate of the point : ");
	scanf("%d",&y);*/
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(500, 500);
	glutInitWindowPosition(100, 100);
	glutCreateWindow("Simple DDA ");
	init();
	glutDisplayFunc(display);
	glutMainLoop();
	return 0;
}