#include <gl/glut.h>
#include <stdio.h>

int x1, y1, x2, y2;
float m;
int c;
int x, y, x_new, y_new;
float mat[3][3];

void myInit(void)
{
	glClearColor(0.0, 0.0, 0.0, 0.0);
	glOrtho(-100.0, 100.0, -100.0, 100.0, -1.0, 1.0);
}
void draw_pixel(int x, int y) {
	glBegin(GL_POINTS);
	glPointSize(1);
	glColor3f(1.0f, 1.0f, 1.0f);
	glVertex2i(x, y);
	glEnd();
}
void drawaxis()
{
	for (int i = -100; i <= 100; i++)	//X and Y axis
	{
		draw_pixel(i, 0);
		draw_pixel(0, i);

	}
	for (int i = -2; i <= 2; i++)
	{
		draw_pixel(95 + i, 4 + i);
		draw_pixel(95 - i, 4 + i);

	}
	for (int i = 0; i <= 2; i++)
	{
		draw_pixel(4 + i, 95 + i);
		draw_pixel(4 - i, 95 + i);
		draw_pixel(4, 95 - i);

	}
}

void draw_line(float m, int c){
	int x1, x2, y1, y2;
	x1 = -100;
	x2 = 100;
	if (m >= 0){
		y1 = m * x1 + c;
		y2 = m * x2 + c;

	}
	else
	{
		y1 = -100;
		y2 = 100;
		x1 = (y1 - c) / m;
		x2 = (y2 - c) / m;
	}
	glBegin(GL_LINES);
	glVertex2s(x1, y1);
	glVertex2s(x2, y2);
	glEnd();

	mat[0][0] = (1 - m*m) / (1 + m*m);
	mat[0][1] = (2 * m) / (1 + m*m);
	mat[0][2] = (-2 * c * m) / (1 + m*m);
	mat[1][0] = (2 * m) / (1 + m*m);
	mat[1][1] = (m*m - 1) / (1 + m*m);
	mat[1][2] = (2 * c) / (1 + m*m);
	mat[2][0] = 0;
	mat[2][1] = 0;
	mat[2][2] = 1;

	int i, j;
	x_new = mat[0][0] * x + mat[0][1] * y + mat[0][2];
	y_new = mat[1][0] * x + mat[1][1] * y + mat[1][2];
	printf("\nThe coordinates of original point is : (%d,%d)", x, y);
	printf("\nThe coordinates of reflectd point is : (%d,%d)", x_new, y_new);
	glPointSize(2);
	//glColor3f (1.0, 0,0);
	glBegin(GL_POINTS);
	
	glColor3f(0, 0, 1);	//Original point in Blue color
	glVertex2s(x, y);
	glColor3f(1, 0, 0);		//Reflected point in Red color
	glVertex2s(x_new, y_new);
	glEnd();
}


void myDisplay() {
	

	draw_line(m, c);
	drawaxis();
	glFlush();
}

void main(int argc, char **argv) {

	printf("\nEnter the value of m : ");
	scanf("%f", &m);
	printf("\nEnter the value of c : ");
	scanf("%d", &c);
	printf("\nEnter the x-coordinate of the point : ");
	scanf("%d", &x);
	printf("\nEnter the y-coordinate of the point : ");
	scanf("%d", &y);
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(500, 500);
	glutInitWindowPosition(100, 100);
	glutCreateWindow("Reflection about line");
	myInit();
	glutDisplayFunc(myDisplay);
	glutMainLoop();
}